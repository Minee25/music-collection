<!-- Header -->
<header class="text-center py-8">
  <h1 class="text-4xl md:text-6xl font-bold text-blue-800 mb-4">
    üéµ Music üéµ
  </h1>
  <p class="text-xl text-blue-500 font-medium">‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å</p>
</header>

<!-- Main Content -->
<div class="container mx-auto px-4 py-12">
  <div class="max-w-5xl mx-auto">
    <div class="bg-white rounded-2xl shadow-2xl overflow-hidden">
      <% if (music && youtube_id) { %>
        <div class="relative pb-[56.25%] h-0">
          <iframe
            class="absolute top-0 left-0 w-full h-full"
            src="https://www.youtube.com/embed/<%= youtube_id %>"
            title="YouTube video player"
            frameborder="0"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
            referrerpolicy="strict-origin-when-cross-origin"
            allowfullscreen
            loading="lazy">
          </iframe>
        </div>
      <% } else { %>
        <div class="relative pb-[56.25%] h-0 bg-gray-200 flex items-center justify-center">
          <p class="text-gray-500 text-lg">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ YouTube</p>
        </div>
      <% } %>
    
      <div class="p-6 flex justify-between items-center">
        <div>
          <% if (music) { %>
            <h2 class="text-lg sm:text-2xl font-semibold text-gray-800">
              <%= music.title || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏•‡∏á' %>
            </h2>
            
            <% if (music.description) { %>
              <p class="text-gray-600 mt-2">
                <%= music.description %>
              </p>
            <% } %>
          <% } else { %>
            <h2 class="text-lg sm:text-2xl font-semibold text-gray-800 mb-2">
              ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏•‡∏á
            </h2>
            <p class="text-gray-600">
              ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏•‡∏á‡πÑ‡∏î‡πâ
            </p>
          <% } %>
        </div>

        <div class="relative flex items-center group transition-transform duration-200">
          <button type="button" id="like-btn" class="cursor-pointer focus:outline-none">
            <i class="fa-regular fa-heart text-4xl text-gray-500 transition-colors duration-200"></i>
          </button>
          <p id="like-count" class="text-gray-500 font-semibold text-xl w-full h-full ml-2">
            <%= likeCount ? likeCount.likeCount : 0 %>
          </p>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="container mx-auto px-4 py-8">
  <div class="max-w-2xl mx-auto text-center space-y-4">
    <% if (music && youtube_id) { %>
      <a href="https://youtu.be/<%= youtube_id %>" 
        target="_blank"
        class="inline-flex items-center px-8 py-4 bg-red-600 hover:bg-red-700 text-white font-bold rounded-full text-lg shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300">
        <i class="fa-brands fa-youtube text-2xl mr-3"></i>
        ‡∏î‡∏π‡∏ö‡∏ô YouTube
      </a>
    <% } else { %>
      <p class="text-gray-500 text-lg">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå YouTube</p>
    <% } %>
  </div>
</div>

<div class="container mx-auto px-4 py-8">
  <div class="max-w-2xl mx-auto text-center">
    <div class="bg-white/80 backdrop-blur-sm rounded-2xl p-8 shadow-xl">
      <h2 class="text-3xl font-bold text-blue-800 mb-4">
        ‡∏®‡∏¥‡∏•‡∏õ‡∏¥‡∏ô
      </h2>
      <p class="text-lg text-blue-500 mb-6 font-semibold">
        <%= music ? (music.artist || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏®‡∏¥‡∏•‡∏õ‡∏¥‡∏ô') : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏®‡∏¥‡∏•‡∏õ‡∏¥‡∏ô' %>
      </p>
      <div class="flex items-center justify-center space-x-4 text-blue-500">
        <span class="text-2xl">üé∂</span>
        <span class="text-2xl">üíô</span>
        <span class="text-2xl">üéµ</span>
      </div>
    </div>
  </div>
</div>

<div class="container mx-auto px-4 py-12">
  <div class="max-w-3xl mx-auto">
    <div class="bg-white/80 backdrop-blur-sm rounded-2xl shadow-2xl p-8">
      <div class="flex flex-col sm:flex-row items-center justify-between mb-6">
        <h2 class="text-2xl font-bold text-blue-800">
          üí¨ ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô
        </h2>
        <button 
          id="add-comment-btn"
          type="button"
          class="mt-6 sm:mt-0 bg-gradient-to-r cursor-pointer from-blue-600 to-purple-500 hover:from-blue-700 hover:to-purple-600 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 focus:ring-offset-blue-50">
          ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô
        </button>
      </div>

      <!-- ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå -->
      <div class="mt-10 space-y-6 text-left">
        <% if (comments && comments.length > 0) { %>
          <% comments.forEach(comment => { %>
            <div class="bg-white/90 rounded-xl shadow-md p-5">
              <div class="flex items-center mb-2">
                <span class="text-sm font-semibold text-gray-500">
                  <%= new Date(comment.createdAt).toLocaleString("th-TH", {
                    year: "numeric",
                    month: "2-digit",
                    day: "2-digit",
                    hour: "2-digit",
                    minute: "2-digit",
                    hour12: false
                  }) %>
                </span>
              </div>
              <p class="text-gray-700">
                <%= comment.content %>
              </p>
            </div>
          <% }) %>
        <% } else { %>
          <p class="text-gray-500 text-center">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÉ‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏ô‡∏µ‡πâ</p>
        <% } %>
      </div>
    </div>
  </div>
</div>

<script>
  // Like **********
  // Load from Local Storage
  if (localStorage.getItem("<%= music._id %>") === "true") {
    document.querySelector("#like-btn i").classList.remove("fa-regular");
    document.querySelector("#like-btn i").classList.add("fa-solid");
    
    document.querySelector("#like-btn i").classList.remove("text-gray-500");
    document.querySelector("#like-btn i").classList.add("text-pink-500");
  } else {
    document.querySelector("#like-btn i").classList.remove("text-pink-500");
    document.querySelector("#like-btn i").classList.add("text-gray-500");
  }

  document.getElementById("like-btn").addEventListener("click", async () => {
    const liked = localStorage.getItem("<%= music._id %>");
    const iconLikeEl = document.querySelector("#like-btn i");
    const likeCountEl = document.getElementById("like-count");

    if (liked === "true") {
      // Unlike
      iconLikeEl.classList.remove("text-pink-500");
      iconLikeEl.classList.add("text-gray-500");
      iconLikeEl.classList.remove("fa-solid");
      iconLikeEl.classList.add("fa-regular");
      localStorage.removeItem("<%= music._id %>");

      try {
        const res = await fetch(`/music/<%= music._id %>/unlike`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({})
        });

        const data = await res.json();
        if (!res.ok) {
          throw new Error(data.message || `HTTP ${res.status}`);
        }
        
        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô like
        const currentCount = parseInt(likeCountEl.textContent) || 0;
        likeCountEl.textContent = Math.max(0, currentCount - 1);
      } catch (err) {
        console.error(err.message);
        return res.status(500).json({ error: "Internal Server Error" });
      }
    } else {
      // Add like
      iconLikeEl.classList.remove("text-gray-500");
      iconLikeEl.classList.add("text-pink-500");
      iconLikeEl.classList.remove("fa-regular");
      iconLikeEl.classList.add("fa-solid");
      localStorage.setItem("<%= music._id %>", "true");

      try {
        const res = await fetch(`/music/<%= music._id %>/add-like`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({})
        });

        const data = await res.json();
        if (!res.ok) {
          throw new Error(data.message || `HTTP ${res.status}`);
        }

        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô like
        const currentCount = parseInt(likeCountEl.textContent) || 0;
        likeCountEl.textContent = currentCount + 1;
      } catch (err) {
        console.error(err.message);
        return res.status(500).json({ error: "Internal Server Error" });
      }
    }
  });

  // Comment **********
  document.getElementById("add-comment-btn").addEventListener("click", () => {
    Swal.fire({ 
      title: "üí¨ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô",
      html: `
        <form id="comment-form" class="space-y-4 text-left">
          <textarea 
            id="comment-textarea" 
            name="content" 
            rows="6" 
            placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì..." 
            class="w-full rounded-lg border border-gray-300 p-3 focus:ring-2 focus:ring-blue-400 focus:outline-none text-gray-700"
            required
          ></textarea>
          <button 
            type="submit"
            class="w-full bg-gradient-to-r from-blue-600 to-purple-500 hover:from-blue-700 hover:to-purple-600 text-white font-bold py-3 rounded-lg shadow-md transition-all duration-300 transform hover:scale-105">
            ‡∏™‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô
          </button>
        </form>
      `,
      showCloseButton: true,
      allowOutsideClick: false,
      showConfirmButton: false,
      width: "40rem",
      background: "rgba(255,255,255,0.95)",
      backdrop: `
        rgba(0,0,0,0.4)
        left top
        no-repeat
      `,
      customClass: {
        popup: "rounded-2xl shadow-2xl",
        title: "text-2xl font-bold text-blue-800 mb-4",
      },
      didOpen: () => {
        const form = Swal.getHtmlContainer().querySelector("#comment-form");
        form.addEventListener("submit", async (e) => {
          e.preventDefault();
          
          const content = form.content.value.trim();

          if (!content) {
            Swal.showValidationMessage("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô");
            return;
          }

          try {
            const res = await fetch(`/music/<%= music._id %>/comments`, {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ content })
            });

            const data = await res.json();
            if (!res.ok) {
              throw new Error(data.message || `HTTP ${res.status}`);
            }

            await Swal.fire({
              icon: "success",
              title: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ üíú",
              confirmButtonColor: "#2563eb" 
            });

            location.reload();
          } catch (err) {
            Swal.fire({
              icon: "error",
              title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
              text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏î‡πâ"
            });
          }
        });
      }
    });
  });
</script>